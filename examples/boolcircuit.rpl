# The boolean circuit example from the paper
#
# example of how to run:
#
#   java -jar RankPL.jar boolcircuit.rpl 2 fx1 fx2 fa1 fa2 fo1

# Set input variables
i1 := FALSE;
i2 := FALSE;
i3 := TRUE;

# Set state of gates (TRUE is functioning, FALSE is faulty)
x1_broken := FALSE <<1>> TRUE;
x2_broken := FALSE <<1>> TRUE;
a1_broken := FALSE <<1>> TRUE;
a2_broken := FALSE <<1>> TRUE;
o1_broken := FALSE <<1>> TRUE;

# Circuit logic
if (x1_broken) then l1 := FALSE <<0>> TRUE else l1 := (i1 ^ i2);
if (a1_broken) then l2 := FALSE <<0>> TRUE else l2 := (i1 & i2);
if (a2_broken) then l3 := FALSE <<0>> TRUE else l3 := (l1 & i3);
if (x2_broken) then b2 := FALSE <<0>> TRUE else b2 := (l1 ^ i3);
if (o1_broken) then b1 := FALSE <<0>> TRUE else b1 := (l3 | l2);

# Observe output
observe b1 & !b2;

# Return state of gates
return "x1_broken: " + x1_broken + ", x2_broken " + x2_broken + 
  	", a1_broken " + a1_broken + ", a2_broken " + a2_broken + 
	", o1_broken " + o1_broken;

